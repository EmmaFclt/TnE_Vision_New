
<!-- sidebar-wrapper  -->

<main class="page-content flex-grow-1 p-5 d-block">
  <div class="d-flex justify-content-between align-items-center">
    <h5>Dépenses globales</h5>
    <%= image_tag("Logo-TNE-RVB-small.png", :alt => "#", :class => "logo") %>
  </div>

  <hr>

  <div class="d-flex my-4">
    <%= simple_form_for :filter, url: root_path, method: :get do |f| %>

      <div class="btn mx-2 dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Conformité
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <a class="dropdown-item" href="#">
            <%= f.input :compliancy, as: :boolean %>
          </a>
        </div>
      </div>

      <div class="btn mx-2 dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Entité
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <a class="dropdown-item" href="#">
            <%= f.input :entity, :collection => @entities, wrapper_html: { class: 'form-group' }, :as => :check_boxes, :multiple => true, include_hidden: false %>
          </a>
        </div>
      </div>

      <div class="btn mx-2 dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Service
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <a class="dropdown-item" href="#">
            <%= f.input :service, :collection => @services, wrapper_html: { class: 'form-group' }, :as => :check_boxes, :multiple => true, include_hidden: false %>
          </a>
        </div>
      </div>

      <div class="btn mx-2 dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Date
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <a class="dropdown-item date" href="#">
            <%= f.input :start_date, as: :date%>
          </a>
        </div>
      </div>

      <div class="btn">
        <%= f.submit 'Filtrer', :class => "btn btn-primary mx-2" %>
      </div>
    <% end %>
  </div>

<br>
  <!-- MODAL SYSTEM -->
  <!-- <div class="row">
    <div class="modal fade" id="Top_travellers_card" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content" style="width: 150%">
          <div class="modal-header">
            <h5 class="modal-title title-center text-center" id="exampleModalLabel">Top Voyageurs</h5>
            <button type="button" class="close modal-close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div class="row">
              <div class="col-8">
                <%= bar_chart @company.top_5_travellers, {colors:["#dd0", "#dd0", "#aad", "#fb2"], download: true }%>
              </div>
              <div class="col-4">
                <h3>Description</h3>
                <br>
                <p > Cumul du nombre de prestations achetées par voyageur</p>
                <div class="icons-right">
                  <div>
                  <%= link_to addfavorite_path(params: { graph: 'top-travellers' }) do %>
                      <% if current_user.favorites.include?('top-travellers') %>
                        <i class="fas fa-heart"></i>
                      <% else %>
                        <i class="far fa-heart"></i>
                      <% end %>
                  <% end %>
                 </div>
                  <div>
                  <i class="fas fa-at"> </i>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div> -->

  <br>

  <%= render 'shared/graphs' %>

</main>

<!-- /#wrapper -->

<!-- <script>
var ctx = document.getElementById('myChartPie');
var myPieChart = new Chart(ctx, {
    type: 'pie',
    data: {
        labels: document.querySelector('#myChartPie').dataset.keys.split(','),
        datasets: [{
            label: 'transaction tupe',
            data: <%= @types.values %>,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});
</script> -->

<!-- <script>
var ctx = document.getElementById('myChart').getContext('2d');
var myBarChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: ['Emma', 'Paula', 'Christian', 'Laura', 'Greg', 'Victoria'],
        datasets: [{
            label: 'top voyageurs',
            data: [12, 19, 3, 5, 2, 3],
            backgroundColor: [
                'rgb(61,96,132)',
                'rgb(162,165,211)',
                'rgb(200,211,0)',
                'rgb(233,78,27)',
                'rgb(143,170,217)',
                'rgb(250,181,34)'
            ],

            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});
</script>

<script>
new Chart(document.getElementById("bubble-chart"), {
    type: 'bubble',
    data: {
      labels: "Strasbourg",
      datasets: [
        {
          label: ["Nice"],
          backgroundColor: 'rgb(61,96,132)',
          borderColor: 'rgb(61,96,132)',
          data: [{
            x: 21269017,
            y: 5.245,
            r: 15
          }]
        }, {
          label: ["Bordeux"],
          backgroundColor: "rgb(162,165,211)",
          borderColor: "rgb(162,165,211)",
          data: [{
            x: 258702,
            y: 7.526,
            r: 10
          }]
        }, {
          label: ["Paris"],
          backgroundColor: 'rgb(200,211,0)',
          borderColor: 'rgb(200,211,0)',
          data: [{
            x: 3979083,
            y: 6.994,
            r: 15
          }]
        }, {
          label: ["Lyon"],
          backgroundColor: 'rgb(233,78,27)',
          borderColor:'rgb(233,78,27)',
          data: [{
            x: 4931877,
            y: 5.921,
            r: 15
          }]
        }
      ]
    },
    options: {
      title: {
        display: true,
        text: 'Top villes'
      }, scales: {
        yAxes: [{
          scaleLabel: {
            display: true,
            labelString: "Volume de dépenses"
          }
        }],
        xAxes: [{
          scaleLabel: {
            display: true,
            labelString: "GDP (PPP)"
          }
        }]
      }
    }
});
</script>

<script>
 var marksCanvas = document.getElementById("marksChart");

var marksData = {
  labels: ["English", "Maths", "Physics", "Chemistry", "Biology", "History"],
  datasets: [{
    label: "Avion",
    backgroundColor: 'rgb(61,96,132)',
    data: [65, 75, 70, 80, 60, 80]
  }, {
    label: "Train",
    backgroundColor:'rgb(250,181,34)',
    data: [54, 65, 60, 70, 70, 75]
  }]
};

var radarChart = new Chart(marksCanvas, {
  type: 'radar',
  data: marksData
});

</script>
-->
<!-- <script>


  new Chart(document.getElementById("bar-chart-horizontal"), {
    type: 'horizontalBar',
    data: {
      labels: document.querySelector('#bar-chart-horizontal').dataset.keys.split(','),
      datasets: [
        {
          label: "Population (millions)",
          backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',

            ],
          borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
          data: document.querySelector('#bar-chart-horizontal').dataset.values.split(',')
                                                               .map(i => parseInt(i, 10))
        }
      ]
    },
    options: {
      legend: { display: false },
      title: {
        display: true,
        text: 'Predicted world population (millions) in 2050'
      }
    }
});
</script> -->
